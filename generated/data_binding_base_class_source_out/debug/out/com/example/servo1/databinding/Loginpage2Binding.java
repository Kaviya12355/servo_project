// Generated by view binder compiler. Do not edit!
package com.example.servo1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.servo1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Loginpage2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText editTextText;

  @NonNull
  public final ProgressBar loading1;

  @NonNull
  public final ProgressBar loading2;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final RecyclerView view1;

  @NonNull
  public final RecyclerView view2;

  private Loginpage2Binding(@NonNull ConstraintLayout rootView, @NonNull EditText editTextText,
      @NonNull ProgressBar loading1, @NonNull ProgressBar loading2, @NonNull TextView textView14,
      @NonNull TextView textView15, @NonNull TextView textView16, @NonNull RecyclerView view1,
      @NonNull RecyclerView view2) {
    this.rootView = rootView;
    this.editTextText = editTextText;
    this.loading1 = loading1;
    this.loading2 = loading2;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.view1 = view1;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Loginpage2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Loginpage2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loginpage2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Loginpage2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextText;
      EditText editTextText = ViewBindings.findChildViewById(rootView, id);
      if (editTextText == null) {
        break missingId;
      }

      id = R.id.loading1;
      ProgressBar loading1 = ViewBindings.findChildViewById(rootView, id);
      if (loading1 == null) {
        break missingId;
      }

      id = R.id.loading2;
      ProgressBar loading2 = ViewBindings.findChildViewById(rootView, id);
      if (loading2 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.view1;
      RecyclerView view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      RecyclerView view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new Loginpage2Binding((ConstraintLayout) rootView, editTextText, loading1, loading2,
          textView14, textView15, textView16, view1, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
